' Rule 1: All Atributes are private
' Rule 2: table name is CamelCase
' Rule 3: table name is singular
' Rule 4: properties are snake_case
' Rule 5: no access podifier is used
@startuml name Database Schema
package "Security System" {
    
    Struct User {
    id: <<PK>> 
    username: String
    first_name: String
    last_name: String
    email: String
    password_hash: String
    created_at: Date
    updated_at: Date
    }
}

package "Company Management" {
    
    Struct Company {
    id <<pk>>
    name: String
    description: String
    user_id : <<FK>> User
    created_at: Date
    updated_at: Date
    }

}

package "Project Management" {
    
    Struct Project {
        id <<pk>>
        name: String
        description: String
        company_id: <<FK>> Company
        project_status_id: <<FK>> ProjectStatus
        created_at: Date
        updated_at: Date
    }

    Struct ProjectStatus {
        id <<pk>>
        name: String 'e.g., "active", "inactive", "completed"'
        description: String
        created_at: Date
        updated_at: Date
    }

    Struct Location {
        id <<pk>>
        public_name: String
        internal_name: String
        lat: String
        long: String
        location_type_id: <<FK>> LocationType
        description: String
        created_at: Date
        updated_at: Date
        
    }

    Struct ProjectLocation {
        id <<pk>>
        project_id: <<FK>> Project
        location_id: <<FK>> Location
        
    }

    Struct LocationType {
        id <<pk>>
        name: String 'Condo, Villa, Land'
        description: String
        created_at: Date
        updated_at: Date
    }

    Struct Info{
        id <<pk>>
        title: String
        content: String
        created_at: Date
        updated_at: Date
        
    }

    Struct ProjectInfo {
        project_id: <<FK>> Project
        info_id: <<FK>> Info
    }
}

package "Account System Management" {

    
    Class ChartOfAccount {
        id <<pk>>
        account_code: String unique
        name: String
        description: String
        chart_of_account_type_id: <<FK>> ChartOfAccountType
        
    }
    '  ABCDE assest debt equity income expense'
    Struct ChartOfAccountType {
        id <<pk>>
        code: Int '1, 2, 3, 4, 5'
        definition: String ' Assest, Debt, Equity, Income, Expense'
        description: String
    }
    Class AccountBalance {
        id: <<pk>>
        account_id: <<FK>> ChartOfAccount
        balance: Decimal
        last_updated: Date
    }

    Class JournalEntry {
        id: <<pk>>
        data: Date
        description: String
        reference_id: <<fk>> ReferenceType
        created_at: Date
        updated_at: Date 
        contact_id: <<FK>> Contact ' เชื่อมโยงกับลูกค้า หรือผู้ลงทุน'
    }





    Class ReferenceType {
        id <<pk>>
        name: String  'ชื่อประเภท เช่น "Investment", "Expense", "Income", "Debt", "Equity"'
        description: String  'คำอธิบายเพิ่มเติมของประเภทนี้'
        created_at: Date
        updated_at: Date
    }

    Struct JournalEntryDetail {
        id: <<pk>>
        journal_entry_id: <<FK>> JournalEntry
        chart_of_account_id: <<FK>> ChartOfAccount
        project_id: <<FK>> Project
        description: String
        amount: Decimal
        debit: Decimal
        credit: Decimal
    }

    Struct LedgerEntry {
        id: <<pk>>
        chart_of_account_id: <<FK>> ChartOfAccount
        date: Date
        journal_entry_detail_id: <<FK>> JournalEntryDetail
        debit: Decimal
        credit: Decimal
    }





    

}


package "Contact Management" {
    Struct Contact {
        id: <<pk>>
        name: String
        company_id: <<FK>> Company
        user_id: <<FK>> User
        contact_type_id: <<FK>> ContactType
        created_at: Date
        updated_at: Date
        
    }

    Struct ContactDetail {
        id: <<pk>>
        contact_id: <<FK>> Customer
        user_id: <<FK>> User
        mobile_phone_1: String
        mobile_phone_2: String
        mobile_phone_3: String
        email: String
        address: String
        created_at: Date
        updated_at: Date
    }

    Struct ContactType {
        id: <<pk>>
        name: String
        user_id: <<FK>> User
        description: String
        created_at: Date
        updated_at: Date
    }
}












User "1" -- "0..*" Company : "owns"

Company "1" -- "0..*" Contact : "has"
Contact "1" -- "1" ContactDetail : "has"
Contact "0.*" -- "1" ContactType : "has"
Company "1" -- "0..*" Project : "has"
Project "1" -- "0..*" ProjectLocation : "has"
Location "1" -- "0..*" ProjectLocation : "has"
Project "1" -- "0..*" ProjectInfo : "has"
Info "1" -- "0..*" ProjectInfo : "has"
Project "1" -- "1" ProjectStatus : "has"
Project "1" -- "0..*" JournalEntry : "has"
Location "1" -- "1" LocationType : "has"
ChartOfAccount "1" -- "0..*" AccountBalance : "has"
ChartOfAccount "1" -- "0..*" JournalEntryDetail : "has"
ChartOfAccount "N" -- "1" ChartOfAccountType : "belongs to"

JournalEntry "1" -- "0..*" JournalEntryDetail : "has"
JournalEntry "1" -- "1" ReferenceType : "has"

JournalEntryDetail "1" -- "0..*" Project : "related to"
JournalEntryDetail "1" -- "0..*" ChartOfAccount : "related to"
JournalEntryDetail "1" -- "0..*" LedgerEntry : "recorded in"
LedgerEntry "1" -- "1" ChartOfAccount : "belongs to"




@enduml
